#include <cmath>
#include <iostream>

struct Point {
    double x;
    double y;

    // Конструктор
    Point(double x = 0, double y = 0) {
        this->x = x;
        this->y = y;
    }

    // Диструктор
    ~Point() {
        this->x = 0;
        this->y = 0;
    }

    double veclen(void) {
        return sqrt(this->x * this->x + this->y * this->y);
    }
};

// Пример использования структур.
// Объявления структур можно делать в заголовочном файле,
// а определения - в исходном файле.
// Если конструктор явно не задан, то используется конструктор по умолчанию Point().
// Если деструктор явно не задан, то используется деструктор по умолчанию.
// Деструктор всегда без аргументов.
// Чтобы избежать конструкции "struct Point p = 2;",
// используется ключевое слово explicit у конструктора структуры.
// Неявный аргумент "this" у методов - указатель на экземпляр структуры.
int main(void) {
    struct Point p(3,4);
    std::cout << p.veclen() << std::endl;
    return 0;
}
